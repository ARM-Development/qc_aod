"""A setuptools-based setup module.

See:
https://packaging.python.org/en/latest/distributing.html
https://github.com/pypa/sampleproject

To install locally during development (from this dir):
$> pip3 install --user -e .
"""

from setuptools import setup
from subprocess import check_output, DEVNULL, CalledProcessError
from os import getenv
from codecs import open
import os
import re

proctype = 'vap'
process  = 'qc_aod'
package  = process
execname = process

# Get the full package name
name = getenv('BUILD_PACKAGE_NAME', proctype+'-'+package)

# Get package version
version = getenv('BUILD_PACKAGE_VERSION')
if not version:
    command = './package/get_package_version.sh'
    version = check_output(command.split()).decode('utf-8').strip()

# Write the version.py file
with open(package+'/version.py', 'w') as f:
    f.write('# This file is autogenerated at build time.\n')
    f.write('# Do not commit it to the git repository.\n')
    f.write('__version__ = "{}"'.format(name+'-'+version))

# Fix version to make Python happy
version = version.replace('-', '.', 1)     # change x.y-z to x.y.z
version = re.sub('\.\w+$', '', version);   # remove build platform (i.e. .el#)
version = re.sub('\.dirty$', '', version); # remove .dirty

# Get URL of git repository
command = 'git config --get remote.origin.url'
try:
    result = check_output(command.split(), stderr=DEVNULL)
    url = result.decode('utf-8').strip()
except CalledProcessError:
    url = ''

setup(
    name         = name,
    version      = version,
    url          = url,
    author       = 'Erol Cromwell',
    author_email = 'erol.cromwell@pnnl.gov',
    packages     = [package],

    #install_requires=['numpy', 'dsproc3', 'cds3'],

    entry_points={
        'console_scripts': [
            '{} = {}.__main__:main'.format(execname, package),
        ],
    },
)
